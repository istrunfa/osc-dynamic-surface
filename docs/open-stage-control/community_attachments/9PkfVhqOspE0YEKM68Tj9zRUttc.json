{
  "session": {
    "type": "root",
    "id": "root",
    "interaction": true,
    "colorBg": "auto",
    "colorText": "auto",
    "colorWidget": "auto",
    "alphaFillOn": "auto",
    "padding": "auto",
    "css": "",
    "variables": "@{parent.variables}",
    "traversing": false,
    "layout": "default",
    "justify": "start",
    "gridTemplate": "",
    "contain": true,
    "scroll": true,
    "innerPadding": true,
    "verticalTabs": false,
    "value": "",
    "default": "",
    "linkId": "",
    "script": "",
    "address": "auto",
    "preArgs": "",
    "typeTags": "",
    "decimals": 2,
    "target": "",
    "ignoreDefaults": false,
    "bypass": false,
    "widgets": [
      {
        "type": "text",
        "top": 0,
        "left": 0,
        "id": "lcd_mtc",
        "visible": true,
        "width": 270,
        "height": 70,
        "expand": "false",
        "colorText": "auto",
        "colorWidget": "auto",
        "colorStroke": "auto",
        "colorFill": "auto",
        "alphaStroke": "auto",
        "alphaFillOff": "auto",
        "alphaFillOn": "auto",
        "padding": "auto",
        "css": "font-family: monospace;\nletter-spacing: 5px;\nfont-weight: bold;\nfont-size: 250%;",
        "vertical": false,
        "wrap": false,
        "align": "center",
        "value": "",
        "default": "",
        "linkId": "",
        "script": "",
        "address": "auto",
        "preArgs": "",
        "target": "",
        "lineWidth": "auto",
        "html": ""
      },
      {
        "type": "script",
        "id": "mtc_in",
        "event": "value",
        "script": "locals.hours = 0\nlocals.minutes = 0\nlocals.seconds = 0\nlocals.frames = 0\nlocals.type = 0\nlocals.songPosition = 0\nlocals.originalText = ''\n\nfunction pad(number) {\n  if (number < 10) {\n    return `0${number}`;\n  }\n  return number.toString();\n}\n\nvar mtc = value.split(\" \");\n\nif (mtc[0] == \"f0\") { // Full time\n  locals.type = (parseInt(mtc[5], 16) >> 5) & parseInt(0x3, 16);\n  locals.hours = parseInt(mtc[5].substr(1,1), 16);\n  locals.minutes = parseInt(mtc[6], 16);\n  locals.seconds = parseInt(mtc[7], 16);\n  locals.frames = parseInt(mtc[8], 16);\n  if (mtc.toString() !== locals.originalText) {\n    set(\"lcd_mtc\", `${pad(locals.hours)}:${pad(locals.minutes)}:${pad(locals.seconds)}:${pad(locals.frames)}`);\n    locals.originalText = mtc.toString();\n  }\n} else if (mtc[0] == \"f1\") {\n    console.log(mtc.toString());\n    const quarterTime = mtc[1];\n    const type = parseInt(quarterTime.substr(0,1),16);\n    let nibble = parseInt(quarterTime.substr(1,1),16);\n    let operator;\n\n    if (type % 2 === 0) {\n        // Low nibble\n        operator = 0xf0;\n    } else {\n        // High nibble\n        nibble <<= 4;\n        operator = 0x0f;\n    }\n    console.log(\"Operator: \" + operator);\n    switch (type) {\n        case 0:\n        case 1:\n            locals.frames = locals.frames & operator | nibble;\n            break;\n        case 2:\n        case 3:\n            locals.seconds = locals.seconds & operator | nibble;\n            break;\n        case 4:\n        case 5:\n            locals.minutes = locals.minutes & operator | nibble;\n            break;\n        case 6:\n            locals.hours = locals.hours & operator | nibble;\n            break;\n        case 7:\n            locals.type = (nibble >> 5) & 0x3;\n            nibble &= 0x10;\n            locals.hours = locals.hours & operator | nibble;\n            set(\"lcd_mtc\", `${pad(locals.hours)}:${pad(locals.minutes)}:${pad(locals.seconds)}:${pad(locals.frames)}`)\n        break;\n        default:\n        break;\n    }\n  //set(\"lcd_mtc\", \"Quarter Time Message: \\n\\n\" + mtc)\n} else if (mtc[0] == \"f2\") {\n  set(\"lcd_mtc\", \"Song Position Message: \\n\\n\" + mtc)\n}",
        "keyBinding": "",
        "keyRepeat": true,
        "keyType": "keydown",
        "value": "",
        "default": "",
        "linkId": "",
        "address": "/sysex",
        "preArgs": "",
        "typeTags": "",
        "decimals": 2,
        "target": "midi:osc",
        "ignoreDefaults": false,
        "bypass": false
      }
    ],
    "tabs": [],
    "visible": true,
    "width": "auto",
    "height": "auto",
    "html": ""
  },
  "version": "1.7.0-beta3",
  "type": "Open Stage Control session"
}