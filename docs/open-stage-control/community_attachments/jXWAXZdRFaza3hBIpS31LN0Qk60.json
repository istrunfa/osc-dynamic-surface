{
  "createdWith": "Open Stage Control",
  "version": "1.13.2",
  "type": "session",
  "content": {
    "type": "root",
    "id": "root",
    "visible": true,
    "interaction": true,
    "comments": "",
    "width": "auto",
    "height": "auto",
    "colorText": "auto",
    "colorWidget": "auto",
    "alphaFillOn": "auto",
    "padding": "auto",
    "html": "",
    "css": "",
    "colorBg": "auto",
    "layout": "default",
    "justify": "start",
    "gridTemplate": "",
    "contain": true,
    "scroll": true,
    "innerPadding": true,
    "verticalTabs": false,
    "hideMenu": false,
    "variables": "@{parent.variables}",
    "traversing": false,
    "value": "",
    "default": "",
    "linkId": "",
    "address": "auto",
    "preArgs": "",
    "typeTags": "",
    "decimals": 2,
    "target": "",
    "ignoreDefaults": false,
    "bypass": false,
    "script": "",
    "widgets": [
      {
        "type": "text",
        "top": 210,
        "left": 170,
        "id": "text_1",
        "visible": true,
        "comments": "",
        "width": 220,
        "height": "auto",
        "expand": "false",
        "colorText": "rgba(233,241,43,1)",
        "colorWidget": "off",
        "colorStroke": "auto",
        "colorFill": "auto",
        "alphaStroke": "auto",
        "alphaFillOff": "auto",
        "alphaFillOn": "auto",
        "lineWidth": "auto",
        "padding": "auto",
        "html": "<h1>3 weeks work-playing on O-S-C... </br> I think it's time to have a break... </br>\nand Open-Seven-Chakras... </h1>",
        "css": "h1{line-height:140%}",
        "vertical": false,
        "wrap": "soft",
        "align": "center",
        "value": "",
        "default": "",
        "linkId": "",
        "address": "auto",
        "preArgs": "",
        "decimals": 2,
        "target": "",
        "script": ""
      },
      {
        "type": "panel",
        "top": 270,
        "left": 180,
        "id": "panel_2",
        "visible": true,
        "interaction": true,
        "comments": "",
        "width": 200,
        "height": 200,
        "expand": "false",
        "colorText": "auto",
        "colorWidget": "auto",
        "colorStroke": "auto",
        "colorFill": "auto",
        "alphaStroke": "auto",
        "alphaFillOff": "auto",
        "alphaFillOn": "auto",
        "lineWidth": "auto",
        "padding": "auto",
        "html": "",
        "css": "",
        "colorBg": "auto",
        "layout": "default",
        "justify": "start",
        "gridTemplate": "",
        "contain": true,
        "scroll": true,
        "innerPadding": true,
        "verticalTabs": false,
        "variables": "@{parent.variables}",
        "traversing": false,
        "value": "",
        "default": "",
        "linkId": "",
        "address": "auto",
        "preArgs": "",
        "typeTags": "",
        "decimals": 2,
        "target": "",
        "ignoreDefaults": false,
        "bypass": false,
        "script": "",
        "widgets": [
          {
            "type": "button",
            "top": "#{65-.125*VAR{fad}}",
            "left": "#{65-.125*VAR{fad}}",
            "id": "La Grenouille",
            "visible": true,
            "interaction": true,
            "comments": "",
            "width": "#{60+.25*VAR{fad}}",
            "height": "#{60+.25*VAR{fad}}",
            "expand": "false",
            "colorText": "rgba(43,178,241,1)",
            "colorWidget": "off",
            "colorStroke": "off",
            "colorFill": "off",
            "alphaStroke": "auto",
            "alphaFillOff": "auto",
            "alphaFillOn": "auto",
            "lineWidth": "auto",
            "padding": "auto",
            "html": "",
            "css": "\nbackground:  no-repeat center/100% url(Images/grenouille_zen.png);\nfont-size: #{.5*VAR{fad}}%;\t       ",
            "colorTextOn": "rgba(241,194,43,1)",
            "label": "#{VAR{text} !== undefined ? VAR{text} : \"Pause...\"}",
            "vertical": false,
            "wrap": false,
            "on": 1,
            "off": 0,
            "mode": "toggle",
            "doubleTap": false,
            "value": "",
            "default": "",
            "linkId": "",
            "address": "auto",
            "preArgs": "",
            "typeTags": "",
            "decimals": 2,
            "target": "",
            "ignoreDefaults": false,
            "bypass": false,
            "script": "if (locals.fader === undefined) locals.fader = 0\nif (locals.compteur === undefined) locals.compteur = 0\n\n\nif(locals.compteur < 30) /* Fixe la limite du compteur à 30... Tant qu'on est en-dessous, on va boucler...*/\n{\n  if(locals.fader != 500)\n  locals.monte = setInterval(function()  /* on déclare une locale-boucle \"monte\" */\n  {\n    console.log({\"value\": value},{\"fader\": locals.fader},{\"compteur\": locals.compteur})\n    setVar('this','fad',locals.fader)                 /* alimente la variable \"fad\" utilisée dans las propriétés, DOIT RESTER DANS LA BOUCLE */\n    setVar('this','text','Breath in...')\n    if( locals.fader >=0 && locals.fader <500 )        /* Pour une valeur de la locale fader strictement inférieure à 500... */\n        {\n        locals.fader+=1                                /* incrémente de 1 la locale fader */\n        } \n    else if(locals.fader == 500)                         /* quand elle arrive à 500... */\n        {\n        clearInterval(locals.monte)                   /* réinitialise la locale \"monte\" */\n        locals.descend = setInterval(function()        /* initialise la locale-boucle \"descend\" */\n            {\n            console.log({\"value\": get('this')},{\"fader\": locals.fader},{\"compteur\": locals.compteur})  \n            setVar('this','fad',locals.fader)         /* alimente la variable \"fad\", utilisée dans las propriétés DOIT RESTER DANS LA BOUCLE */\n            setVar('this','text','Breath out...')\n            if(locals.fader >= 1)\n              {\n              locals.fader -= 1                           /* décrémente de 1 la locale fader */\n              } \n            else if(locals.fader === 0)                  /* quand elle revient à 0... */\n              {\n              clearInterval(locals.descend)           /* réinitialise la locale \"descend\" */\n              locals.compteur += 1                     /* incrémente la locale \"compteur\" */\n               set('this',0)                          /* remet le bouton à 0 */\n              } \n            },10)                                     /* Timing de la cboucle \"descend\" */\n        } \n  },10)                                                /* Timing de la boucle \"monte\" */\n}\n\nelse if(locals.compteur==30)\n{\n  console.log({\"value\": get('this')},{\"fader\": locals.fader},{\"compteur\": locals.compteur})\n  set('this',0)\n  locals.compteur = 0             /* Si le compteur est à 30, remet celui-ci ainsi que le bouton à 0 */\n}"
          }
        ],
        "tabs": []
      }
    ],
    "tabs": []
  }
}