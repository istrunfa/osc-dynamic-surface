{
  "createdWith": "Open Stage Control",
  "version": "1.24.2",
  "type": "session",
  "content": {
    "type": "root",
    "lock": false,
    "id": "root",
    "visible": true,
    "interaction": true,
    "comments": "",
    "width": "auto",
    "height": "auto",
    "colorText": "auto",
    "colorWidget": "auto",
    "alphaFillOn": "auto",
    "borderRadius": "auto",
    "padding": 0,
    "html": "",
    "css": "",
    "colorBg": "auto",
    "layout": "default",
    "justify": "start",
    "gridTemplate": "",
    "contain": true,
    "scroll": true,
    "innerPadding": true,
    "tabsPosition": "top",
    "hideMenu": false,
    "variables": "@{parent.variables}",
    "traversing": false,
    "value": "",
    "default": "",
    "linkId": "",
    "address": "auto",
    "preArgs": "",
    "typeTags": "",
    "decimals": 2,
    "target": "",
    "ignoreDefaults": false,
    "bypass": false,
    "onCreate": "",
    "onValue": "",
    "widgets": [
      {
        "type": "panel",
        "top": 0,
        "left": 0,
        "lock": false,
        "id": "panel_1",
        "visible": true,
        "interaction": true,
        "comments": "",
        "width": 1920,
        "height": 590,
        "expand": "false",
        "colorText": "auto",
        "colorWidget": "#ffffff",
        "colorStroke": "auto",
        "colorFill": "auto",
        "alphaStroke": "auto",
        "alphaFillOff": "auto",
        "alphaFillOn": "auto",
        "lineWidth": "auto",
        "borderRadius": "auto",
        "padding": 0,
        "html": "",
        "css": "",
        "colorBg": "auto",
        "layout": "default",
        "justify": "start",
        "gridTemplate": "",
        "contain": true,
        "scroll": true,
        "innerPadding": true,
        "tabsPosition": "top",
        "variables": "@{parent.variables}",
        "traversing": false,
        "value": "",
        "default": "",
        "linkId": "",
        "address": "auto",
        "preArgs": "",
        "typeTags": "",
        "decimals": 2,
        "target": "",
        "ignoreDefaults": false,
        "bypass": false,
        "onCreate": "",
        "onValue": "",
        "widgets": [
          {
            "type": "variable",
            "lock": false,
            "id": "variable_harpScale",
            "comments": "",
            "value": "IMPORT{harp_scale.json}",
            "default": "",
            "linkId": "",
            "address": "auto",
            "preArgs": "",
            "typeTags": "",
            "decimals": 2,
            "target": "",
            "ignoreDefaults": false,
            "bypass": false,
            "onCreate": "",
            "onValue": "// fill the \"scale button\" with the existing scales to choose\nvar harpScale = value\nvar scaleButtonName = {}\nvar scaleGroupColor = []\nfor (var i = 0; i < harpScale.scales.length; i++){\n  scaleButtonName[harpScale.scales[i].scaleName] = i\n  scaleGroupColor.push(harpScale.scales[i].groupColor);\n}\nsetVar(\"menu_2A_harp_scale\",\"harpScaleMenu\",scaleButtonName)\nsetVar(\"menu_2A_harp_scale\",\"harpGroupColor\",scaleGroupColor)\n// set the default \"scale button\" to the first entry (major)\nset(\"menu_2A_harp_scale\",(51-1))\n// set the default \"range-fader\" (C2-C6)\nset(\"range_Harp\",[2,5])"
          },
          {
            "type": "range",
            "top": 510,
            "left": 20,
            "lock": false,
            "id": "range_Harp",
            "visible": true,
            "interaction": true,
            "comments": "",
            "width": 620,
            "height": 60,
            "expand": "false",
            "colorText": "auto",
            "colorWidget": "#ff0000",
            "colorStroke": "auto",
            "colorFill": "auto",
            "alphaStroke": 0.25,
            "alphaFillOff": 0.25,
            "alphaFillOn": 1,
            "lineWidth": 2,
            "padding": 10,
            "html": "",
            "css": "",
            "design": "round",
            "knobSize": 20,
            "horizontal": true,
            "pips": true,
            "dashed": false,
            "gradient": [],
            "snap": false,
            "spring": false,
            "doubleTap": false,
            "range": {
              "0%": {
                "C0": 0
              },
              "14.29%": {
                "C1": 1
              },
              "28.58%": {
                "C2": 2
              },
              "42.87%": {
                "C3": 3
              },
              "57.16%": {
                "C4": 4
              },
              "71.45%": {
                "C5": 5
              },
              "85.74%": {
                "C6": 6
              },
              "100%": {
                "C7": 7
              }
            },
            "logScale": false,
            "sensitivity": 1,
            "steps": 8,
            "value": "",
            "default": [
              0,
              7
            ],
            "linkId": "",
            "address": "auto",
            "preArgs": "",
            "typeTags": "",
            "decimals": 2,
            "target": "",
            "ignoreDefaults": false,
            "bypass": false,
            "onCreate": "setTimeout(()=>{\n  // setTimeout is used here because the range widget\n  // is created before the text widgets so we need to wait a little\n})",
            "onValue": "// define variable\nvar harpScale = get('variable_harpScale')\nvar cK = \"VAR{countKeys}\" || 0\n// set the harp keys\nsetVar('matrix_2A_harp','keys', (value[1]-value[0])*cK)\nsetVar('matrix_2A_harp','start', value[0])\n// set the keyboard keys\nsetVar('keyboard_2A_big','keys', (value[1]-value[0])*12)\nsetVar('keyboard_2A_big','start', (value[0]*12)+24)",
            "onTouch": "",
            "borderRadius": 0
          },
          {
            "type": "menu",
            "top": 510,
            "left": 720,
            "lock": false,
            "id": "menu_2A_harp_scale_key",
            "visible": true,
            "interaction": true,
            "comments": "",
            "width": 160,
            "height": 60,
            "expand": false,
            "size": 300,
            "ignoreTabs": true,
            "colorText": "auto",
            "colorWidget": "red",
            "colorStroke": "auto",
            "colorFill": "auto",
            "alphaStroke": 1,
            "alphaFillOff": 0.6,
            "alphaFillOn": 1,
            "lineWidth": 2,
            "padding": 2,
            "html": "",
            "css": ".item {\n  background:rgba(255,0,0,0.5);\n}",
            "label": "%key",
            "icon": false,
            "textAlign": "center",
            "menuAlignV": "center",
            "menuAlignH": "center",
            "layout": "circular",
            "gridTemplate": "",
            "toggle": true,
            "doubleTap": false,
            "values": {
              "C": 0,
              "C#": 1,
              "D": 2,
              "D#": 3,
              "E": 4,
              "F": 5,
              "F#": 6,
              "G": 7,
              "G#": 8,
              "A": 9,
              "A#": 10,
              "B": 11
            },
            "weights": "",
            "value": "",
            "default": 0,
            "linkId": "",
            "address": "auto",
            "preArgs": "",
            "typeTags": "",
            "decimals": 2,
            "target": "",
            "ignoreDefaults": false,
            "bypass": false,
            "onCreate": "",
            "onValue": "var harpScale = get('variable_harpScale')\nvar k = value\n// Read the first column in the menu value\nvar val = value,\n    pair = Object.entries(getProp(this, 'values')).find(entry=>entry[1] === value), // get [key, value] pair in values that matches current value\n    sName = pair !== undefined ? pair[0] : undefined // get key from matching pair if any\n// set the note number according to C\nsetVar(\"matrix_2A_harp\",\"keyNoteNumber\",k)\nsetVar(\"keyboard_2A_harp\",\"keyNoteNumber\",k)\nsetVar(\"keyboard_2A_big\",\"keyNoteNumber\",k)\n//set KeyName\nsetVar(\"matrix_2A_harp\",\"keyNoteName\",sName)",
            "borderRadius": 0
          },
          {
            "type": "menu",
            "top": 510,
            "left": 880,
            "lock": false,
            "id": "menu_2A_harp_scale",
            "visible": true,
            "interaction": true,
            "comments": "",
            "width": 310,
            "height": 60,
            "expand": "false",
            "size": [
              1400,
              900
            ],
            "ignoreTabs": true,
            "colorText": "auto",
            "colorWidget": "#ffa500",
            "colorStroke": "auto",
            "colorFill": "auto",
            "alphaStroke": 1,
            "alphaFillOff": 0.6,
            "alphaFillOn": 1,
            "lineWidth": 2,
            "padding": 2,
            "html": "",
            "css": "JS{{\nvar css = ''\nvar sGC = VAR{harpGroupColor} || []\nfor(var i = 0; i < sGC.length; i++) {\n  css += '.item:nth-child(' + (i+1) + '){background: #' + sGC[i] + ';white-space: pre-wrap;}\\n'\n}\nreturn css\n}}",
            "label": "%key",
            "icon": false,
            "textAlign": "center",
            "menuAlignV": "center",
            "menuAlignH": "center",
            "layout": "grid",
            "gridTemplate": 6,
            "toggle": true,
            "doubleTap": false,
            "values": "VAR{harpScaleMenu}",
            "weights": "",
            "value": "",
            "default": 0,
            "linkId": "",
            "address": "auto",
            "preArgs": "",
            "typeTags": "",
            "decimals": 2,
            "target": "",
            "ignoreDefaults": false,
            "bypass": false,
            "onCreate": "",
            "onValue": "var harpScale = get('variable_harpScale')\nvar s = value\n// set countkeys for Fader range and Matrix\nvar cK = harpScale.scales[s].countKeys\nsetVar(\"range_Harp\",\"countKeys\",cK)\nsetVar(\"matrix_2A_harp\",\"countKeys\",cK)\n// set Fader Range\nvar a = get(\"range_Harp\")\nsetVar('matrix_2A_harp','keys', (a[1]-a[0])*cK)\n// set Fader scale\nsetVar(\"matrix_2A_harp\",\"scaleJSON\", harpScale.scales[s].keys)\nsetVar(\"keyboard_2A_harp\",\"scaleJSON\", harpScale.scales[s].keys)\nsetVar(\"keyboard_2A_big\",\"scaleJSON\", harpScale.scales[s].keys)",
            "borderRadius": 0
          },
          {
            "type": "matrix",
            "top": 10,
            "left": 10,
            "lock": false,
            "id": "matrix_2A_harp",
            "visible": "#{@{button_2B_harp_toggle} == 0 ? \"true\" : \"false\"}",
            "interaction": true,
            "comments": "",
            "width": 1890,
            "height": 490,
            "expand": "false",
            "colorText": "auto",
            "colorWidget": "#114477",
            "colorStroke": "auto",
            "colorFill": "auto",
            "alphaStroke": 0,
            "alphaFillOff": 0,
            "alphaFillOn": 0.75,
            "lineWidth": 0,
            "padding": 4,
            "html": "",
            "css": "",
            "colorBg": "auto",
            "layout": "horizontal",
            "justify": "start",
            "gridTemplate": "",
            "contain": true,
            "scroll": true,
            "innerPadding": true,
            "variables": "@{parent.variables}",
            "traversing": true,
            "widgetType": "button",
            "quantity": "VAR{keys}",
            "props": "JS{\nvar props = {}\n\n//define variable from JSONfile and Widgets\nvar scaleNumberOfKeys = VAR{countKeys} || 0\nvar rangeStart = VAR{start} || 0\nvar keyNote = VAR{keyNoteNumber} || 0\n\n//define matrix labels\nconst labels = []\nfor( let i=0; i<scaleNumberOfKeys; i++ ){\n  var k = VAR{keyNoteName} || \"C\"\n  labels.push( k + (i+rangeStart));\n  for (let j=0; j < (scaleNumberOfKeys-1); j++ ){\n    labels.push(\"\")\n  }\n}\n\n//define scales and keys\n//var scale = [0, 2, 4, 5, 7]\nvar scale = VAR{scaleJSON} || []\nvar note = ((24 + (rangeStart*12) + keyNote)) + scale[$ % scale.length]\nvar octave = 12 * Math.floor($ / scale.length)\nnote = note + octave\n\n//define matrix colors\nconst colors = []\nfor( let i=0; i<=6; i++ ) {\n  colors.push(\"red\")\n  for(let j=0; j < (scaleNumberOfKeys-1); j++ ){\n    colors.push(\"orange\")\n  }\n}\nprops.alphaStroke = 1\nprops.alphaFillOff = .6\nprops.label = \" \"\nprops.mode = \"push\"\nprops.range = {min:0, max:127}\nprops.html = labels[$]\nprops.colorWidget = colors[$]\nprops.lineWidth = 2\n\n//define velocity\nprops.script = `\nvar velocity\nif(value == getProp('this', 'on')){\n  velocity = 127 - (locals.touchCoords[1] * 127)\n}else{\n  velocity = 0 // velocity 0 == note off\n}\nsend('midi:OSC', '/note', 1, `+ note +`, velocity)\n`\nreturn props\n}",
            "value": "",
            "default": "",
            "linkId": "",
            "address": "auto",
            "preArgs": "",
            "typeTags": "",
            "decimals": 2,
            "target": "",
            "ignoreDefaults": false,
            "bypass": false,
            "onCreate": "",
            "onValue": "",
            "widgets": [],
            "tabs": [],
            "borderRadius": 0,
            "tabsPosition": "top"
          },
          {
            "type": "keyboard",
            "top": 510,
            "left": 1450,
            "lock": false,
            "id": "keyboard_2A_harp",
            "visible": "#{@{button_2B_harp_toggle} == 0 ? \"true\" : \"false\"}",
            "interaction": false,
            "comments": "",
            "width": 180,
            "height": 60,
            "expand": "false",
            "colorText": "auto",
            "colorWidget": "auto",
            "colorStroke": "auto",
            "colorFill": "auto",
            "alphaStroke": 1,
            "alphaFillOff": 0,
            "alphaFillOn": 1,
            "lineWidth": "auto",
            "borderRadius": "auto",
            "padding": "auto",
            "html": "",
            "css": "JS{{\n  var css = ''\n  var allKeyNames = [\"C\",\"C#\",\"D\",\"D#\",\"E\",\"F\",\"F#\",\"G\",\"G#\",\"A\",\"A#\",\"B\"]\n  var k = (VAR{keyNoteNumber} || 0) + 1\n  var scale = VAR{scaleJSON} || [0,2,4,5,7,9,11]\n  var l = scale.length-1\n  css += \".key:nth-child(\" + (k) + \") inner {background-color: #cc0000}\\n\"\n  \n  for( let i=1; i<=l; i++ ) {\n    var outside = (scale[i] + k)\n    if (outside > 12) {\n      outside = outside -12\n    }\n    css += '.key:nth-child(' + (outside) + ') inner {background-color: orange}\\n'\n  }\n  css += \".key > inner { border: 1px solid #111}\"\n  return css\n}}",
            "colorWhite": "auto",
            "colorBlack": "auto",
            "keys": 12,
            "start": 48,
            "traversing": true,
            "on": 1,
            "off": 0,
            "velocity": false,
            "mode": "push",
            "value": "",
            "default": "",
            "linkId": "",
            "address": "auto",
            "preArgs": "",
            "typeTags": "",
            "decimals": 2,
            "target": "",
            "ignoreDefaults": false,
            "bypass": false,
            "onCreate": "",
            "onValue": ""
          },
          {
            "type": "keyboard",
            "top": 150,
            "left": 180,
            "lock": false,
            "id": "keyboard_2A_big",
            "visible": "#{@{button_2B_harp_toggle} == 1 ? \"true\" : \"false\"}",
            "interaction": true,
            "comments": "",
            "width": 1890,
            "height": 490,
            "expand": "false",
            "colorText": "auto",
            "colorWidget": "auto",
            "colorStroke": "auto",
            "colorFill": "auto",
            "alphaStroke": 1,
            "alphaFillOff": 0,
            "alphaFillOn": 1,
            "lineWidth": "auto",
            "borderRadius": "auto",
            "padding": "auto",
            "html": "",
            "css": "JS{{\n  var css = ''\n  var k = (VAR{keyNoteNumber} || 0) + 1\n  var scale = VAR{scaleJSON} || [0,2,4,5,7,9,11]\n  var l = scale.length-1\n  var octave = 7\n  for (let j=0; j<=((octave-1)*12); j=j+12 ) { \n    css += \".key:nth-child(\" + (k+j) + \") inner {background-color: #cc0000}\\n\"\n    for ( let i=1; i<=l; i++ ) {\n      var outside = (scale[i] + k)\n      if (outside > 12) {\n        outside = outside -12\n      }\n      css += '.key:nth-child(' + (outside+j) + ') inner {background-color: orange}\\n'\n    }\n  }\n  css += \".key > inner { border: 1px solid #111}\"\n  return css\n}}",
            "colorWhite": "auto",
            "colorBlack": "auto",
            "keys": "VAR{keys}",
            "start": "VAR{start}",
            "traversing": true,
            "on": 127,
            "off": 0,
            "velocity": true,
            "mode": "push",
            "value": "",
            "default": "",
            "linkId": "",
            "address": "/note",
            "preArgs": 1,
            "typeTags": "",
            "decimals": 2,
            "target": "midi:OSC",
            "ignoreDefaults": false,
            "bypass": false,
            "onCreate": "",
            "onValue": ""
          },
          {
            "type": "button",
            "top": 520,
            "left": 1830,
            "lock": false,
            "id": "button_2B_harp_toggle",
            "visible": true,
            "interaction": true,
            "comments": "",
            "width": 80,
            "height": "auto",
            "expand": "false",
            "colorText": "auto",
            "colorWidget": "#336699",
            "colorStroke": "auto",
            "colorFill": "auto",
            "alphaStroke": 0,
            "alphaFillOff": 0.75,
            "alphaFillOn": 0.75,
            "lineWidth": 0,
            "borderRadius": 0,
            "padding": 1,
            "html": "",
            "css": "",
            "colorTextOn": "#ffffff",
            "label": "#{@{this} == 1 ? \"HARP\" : \"KEYBOARD\"}",
            "vertical": false,
            "wrap": false,
            "on": 1,
            "off": 0,
            "mode": "toggle",
            "doubleTap": false,
            "decoupled": false,
            "value": "",
            "default": "",
            "linkId": "",
            "address": "auto",
            "preArgs": "",
            "typeTags": "",
            "decimals": 2,
            "target": "",
            "ignoreDefaults": false,
            "bypass": false,
            "onCreate": "",
            "onValue": ""
          },
          {
            "type": "text",
            "top": 10,
            "left": 10,
            "id": "rahmen_2A_harp",
            "visible": true,
            "comments": "",
            "width": 1890,
            "height": 490,
            "expand": false,
            "colorText": "auto",
            "colorWidget": "auto",
            "colorStroke": "auto",
            "colorFill": "auto",
            "alphaStroke": 1,
            "alphaFillOff": 0,
            "alphaFillOn": 0,
            "lineWidth": 1,
            "padding": 0,
            "html": "",
            "css": "",
            "value": "",
            "default": "",
            "linkId": "",
            "address": "auto",
            "preArgs": "",
            "decimals": 2,
            "target": "",
            "onCreate": "",
            "onValue": "",
            "vertical": false,
            "wrap": false,
            "align": "center",
            "lock": false,
            "borderRadius": 0
          },
          {
            "type": "text",
            "top": 0,
            "left": 0,
            "id": "rahmen_2B_harp_full",
            "visible": true,
            "comments": "",
            "width": 1910,
            "height": 580,
            "expand": false,
            "colorText": "auto",
            "colorWidget": "auto",
            "colorStroke": "auto",
            "colorFill": "auto",
            "alphaStroke": 1,
            "alphaFillOff": 0,
            "alphaFillOn": 0,
            "lineWidth": 1,
            "padding": 0,
            "html": "",
            "css": "",
            "value": "",
            "default": "",
            "linkId": "",
            "address": "auto",
            "preArgs": "",
            "decimals": 2,
            "target": "",
            "onCreate": "",
            "onValue": "",
            "vertical": false,
            "wrap": false,
            "align": "center",
            "lock": false,
            "borderRadius": 0
          }
        ],
        "tabs": []
      }
    ],
    "tabs": []
  }
}